[{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"outlier-detection-in-species-distribution-modeling","dir":"Articles","previous_headings":"","what":"Outlier Detection in Species Distribution Modeling","title":"occOutlierR: Identifying outlying species occurrence records","text":"Species distribution models (SDMs) widely used ecology predict potential distribution species across different environments. However, building accurate SDMs can challenging due presence outliers occurrence data. Outliers records deviate significantly observations can substantial impact model predictions. difficulty detecting outliers lies unpredictability. can arise measurement errors, sampling processes, skewed distributions. Small sample sizes exacerbate issue, making challenging identify outliers using traditional descriptive statistics boxplots percentiles. Furthermore, presence disjunct clusters outlying records (known “masked outliers”) can make detection even difficult. vignette, show several approaches identifying dealing issues examining various methods detecting outliers spatial environmental outliers. goal provide comprehensive overview effectively address issues using adaptable outlier detection methods.","code":"library(occOutliers)"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"detection-of-outliers","dir":"Articles","previous_headings":"","what":"Detection of outliers","title":"occOutlierR: Identifying outlying species occurrence records","text":"Outliers identified based distance observations either geographic environmental space. multivariate distance metrics, Euclidean distance, used measure distance record centroid observations. One-tailed tests outlier detection designed detect exceedingly large distances practical automation modeling pipelines.","code":""},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"spatial","dir":"Articles","previous_headings":"Detection of outliers","what":"Spatial","title":"occOutlierR: Identifying outlying species occurrence records","text":"calculate spatial outliers, need use method takes account spatial relationships observations. can achieved calculating distances observation centroid observations. require sf object defined Coordinate Reference System (CRS) calculation. CRS projected, use Euclidean distance measure distance. However, CRS geographic, use Great Circle distance account curvature Earth. occOutlier package uses sf::st_distance() internally perform calculations, provides convenient interface working spatial data R. vignette’s examples, use species geographic coordinates (WGS84). CSV file contain coordinates observation (‘X’ ‘Y’), plus columns environmental data use upcoming examples. first example, use Astraea macroura detect spatial outliers.  ´occOutlier´ offers four methods detect outlier based distance centroid. ‘iqr’: Interquartile range ‘grubbs’: Grubb’s outlier test ‘dixon’: Dixon’s outlier test ‘rosner’: Rosner test multiple outliers","code":"a_macroura <- read.csv(system.file('extdata/Astraea_macroura.csv',                                    package = 'occOutliers')) |>   sf::st_as_sf(coords = c(\"X\", \"Y\")) |>   # Set WGS84   sf::st_set_crs(4326) plot(a_macroura[1])"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"interquartile-range-iqr","dir":"Articles","previous_headings":"Detection of outliers > Spatial","what":"Interquartile range (IQR)","title":"occOutlierR: Identifying outlying species occurrence records","text":"IQR method calculates difference 75th percentile (Q3) 25th percentile (Q1). Data points 1.5 times range away Q1 Q3 typically considered outliers. simple yet effective approach helps identify data points significantly deviate rest dataset, making useful tool outlier detection. main function package findOutliers(). main input sf object coordinates. , can define want detect spatial environmental outliers respective parameters (TRUE default). finally can define method detect outliers ‘method’ parameter. , use ‘iqr’. notice message, two outliers detected using method. output function object additional column (out_spatial), allow know outliers. visualize, can plot points using plot() function.  package also provide plotOutlier function easy visualize result adding shapefile.  tip, keep mind plotOutlier() function two useful parameters allow expand shapefile buffer around coordinates (bufferDist), change legend position (legLoc).","code":"sp_iqr <- findOutliers(a_macroura, environmental = FALSE, method = \"iqr\") ## [1] \"2 geographic outlier(s) found with method iqr\" sp_iqr$out_spatial ##  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE ## [13] FALSE FALSE FALSE FALSE  TRUE plot(sp_iqr[\"out_spatial\"]) # Load world shapefile worldWGS84 <- readRDS(system.file('extdata/worldWGS84.rds',                                   package = 'occOutliers')) # Get outlier plot plotOutliers(sp_iqr, shpToPlot = worldWGS84) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries plotOutliers(sp_iqr, legLoc = \"bottomright\", bufferDist = 0.4,               shpToPlot = worldWGS84) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"the-grubbs-outlier-test","dir":"Articles","previous_headings":"Detection of outliers > Spatial","what":"The Grubb’s outlier test","title":"occOutlierR: Identifying outlying species occurrence records","text":"Grubbs test statistical method used detect outliers dataset. calculates distance data point mean remaining data points, determines data points farthest away mean. test useful multiple outliers dataset data distribution skewed. test default method findOutlier(). , just detected one spatial outlier.","code":"sp_grubbs <- findOutliers(a_macroura, environmental = FALSE) ## [1] \"1 geographic outlier(s) found with method grubbs\" plotOutliers(sp_grubbs, shpToPlot = worldWGS84) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"the-dixons-outlier-test","dir":"Articles","previous_headings":"Detection of outliers > Spatial","what":"The Dixon’s outlier test","title":"occOutlierR: Identifying outlying species occurrence records","text":"Dixon’s test statistical method used detect single outliers dataset. calculates difference largest smallest values, compares range critical value standard normal distribution. test assumes multiple outliers, may suitable datasets complex outlier patterns.","code":"sp_dixon <- findOutliers(a_macroura, method = \"dixon\", environmental = FALSE) ## [1] \"1 geographic outlier(s) found with method dixon\" plotOutliers(sp_dixon, shpToPlot = worldWGS84) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"rosners-test","dir":"Articles","previous_headings":"Detection of outliers > Spatial","what":"Rosner’s Test","title":"occOutlierR: Identifying outlying species occurrence records","text":"Rosner’s test statistical method detects single multiple outliers dataset calculating modified Z-score data point. provides effective way identify anomalies datasets large sample sizes complex distributions, robust non-normality heavy-tailed distributions. test requires define number outliers test (parameter ‘kRosner’)  Keep mind also can change p-value assessing significant test ‘grubbs’, ‘dixon’, ‘rosner’. Default 1e-05. change smaller pval previous test, outliers detected.","code":"sp_rosner <- findOutliers(a_macroura, method = \"rosner\", kRosner = 2,                           environmental = FALSE) ## [1] \"2 geographic outlier(s) found with method rosner\" plotOutliers(sp_rosner, shpToPlot = worldWGS84) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries sp_pval <- findOutliers(a_macroura, method = \"rosner\", kRosner = 2,                           environmental = FALSE, pval = 1e-06) ## [1] \"0 geographic outlier(s) found with method rosner\" plotOutliers(sp_pval, shpToPlot = worldWGS84) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"environmental-outliers","dir":"Articles","previous_headings":"Detection of outliers","what":"Environmental outliers","title":"occOutlierR: Identifying outlying species occurrence records","text":"Similar process finding spatial outliers, can use four methods find environmental outliers. However, process also able select several ways measure distance centroid observations (‘distEnvMethod’ parameter), scale data (‘scaleData’; default TRUE). output sf object new column ‘out_env’. example, use Anarthria scabra using Scrubb´s test changing method measure distance bewteen centroids.","code":"A_scraba <- read.csv(system.file('extdata/Anarthria_scabra.csv',                                    package = 'occOutliers')) |>   sf::st_as_sf(coords = c(\"X\", \"Y\")) |>   # Set WGS84   sf::st_set_crs(4326) plot(A_scraba[1])"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"euclidean-distance","dir":"Articles","previous_headings":"Detection of outliers > Environmental outliers","what":"Euclidean distance","title":"occOutlierR: Identifying outlying species occurrence records","text":"Euclidean distance measure straight-line distance two points n-dimensional space, calculated square root sum squared differences corresponding coordinates. , one environmental outlier detected, correpons northern observation.","code":"e_euclidean <- findOutliers(A_scraba, spatial = FALSE) ## [1] \"1 environmental outlier(s) found with methods grubbs and euclidean (distance).\" plotOutliers(e_euclidean, shpToPlot = worldWGS84, legLoc = \"topright\") ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"manhattan-distance","dir":"Articles","previous_headings":"Detection of outliers > Environmental outliers","what":"Manhattan distance","title":"occOutlierR: Identifying outlying species occurrence records","text":"Manhattan distance (also known L1 distance) measure sum absolute differences corresponding coordinates two points n-dimensional space. ’s named grid layout New York City streets.","code":"e_manhattan <- findOutliers(A_scraba, spatial = FALSE,                              distEnvMethod = \"manhattan\") ## [1] \"0 environmental outlier(s) found with methods grubbs and manhattan (distance).\" plotOutliers(e_manhattan, shpToPlot = worldWGS84, legLoc = \"topright\") ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"cosine","dir":"Articles","previous_headings":"Detection of outliers > Environmental outliers","what":"Cosine","title":"occOutlierR: Identifying outlying species occurrence records","text":"Cosine Dissimilarity measures similarity two vectors calculating cosine angle , resulting value -1 1, higher values indicate similar vectors. Manhattan distance example, detected environmental outlier.","code":"e_cosine <- findOutliers(A_scraba, spatial = FALSE,                           distEnvMethod = \"cosine\") ## [1] \"0 environmental outlier(s) found with methods grubbs and cosine (distance).\""},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"mahalanobis","dir":"Articles","previous_headings":"Detection of outliers > Environmental outliers","what":"Mahalanobis","title":"occOutlierR: Identifying outlying species occurrence records","text":"Mahalanobis distance measure distance point distribution, taking account covariance variables. ’s used detect outliers multivariate data calculating far point center distribution accounting spread correlations.","code":"e_mahalanobis <- findOutliers(A_scraba, spatial = FALSE,                                distEnvMethod = \"mahalanobis\") ## [1] \"1 environmental outlier(s) found with methods grubbs and mahalanobis (distance).\" plotOutliers(e_mahalanobis, shpToPlot = worldWGS84, legLoc = \"topright\") ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/articles/occOutlier.html","id":"spatial-environmental","dir":"Articles","previous_headings":"Detection of outliers","what":"Spatial & Environmental","title":"occOutlierR: Identifying outlying species occurrence records","text":"can also detect types outliers unique call. , use Camissonia_tanacetifolia example. example, detected two outliers, one spatial one environmental, correspond observation.  Changing p-value 0.05 (lower value), able detect four outliers. One exclusively spatial, one exclusively environmental, two outliers geography environment.","code":"C_tanacetifolia <- read.csv(system.file('extdata/Camissonia_tanacetifolia.csv',                                    package = 'occOutliers')) |>   sf::st_as_sf(coords = c(\"X\", \"Y\")) |>   # Set WGS84   sf::st_set_crs(4326) out_C_tana <- findOutliers(C_tanacetifolia) ## [1] \"1 geographic outlier(s) found with method grubbs\" ## [1] \"1 environmental outlier(s) found with methods grubbs and euclidean (distance).\" plotOutliers(out_C_tana, shpToPlot = worldWGS84, legLoc = NULL) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries out_pval <- findOutliers(C_tanacetifolia, pval = 0.05) ## [1] \"3 geographic outlier(s) found with method grubbs\" ## [1] \"3 environmental outlier(s) found with methods grubbs and euclidean (distance).\" plotOutliers(out_pval, shpToPlot = worldWGS84, legLoc = NULL) ## Warning: attribute variables are assumed to be spatially constant throughout ## all geometries"},{"path":"https://gepinillab.github.io/occOutliers/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory Merow. Author. Gonzalo E. Pinilla-Buitrago. Author, maintainer.","code":""},{"path":"https://gepinillab.github.io/occOutliers/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Merow C, Pinilla-Buitrago G (2024). occOutliers: Identify Outlying Species Occurrence Records. R package version 0.1.0, https://gepinillab.github.io/occOutliers/.","code":"@Manual{,   title = {occOutliers: Identify Outlying Species Occurrence Records},   author = {Cory Merow and Gonzalo E. Pinilla-Buitrago},   year = {2024},   note = {R package version 0.1.0},   url = {https://gepinillab.github.io/occOutliers/}, }"},{"path":[]},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-iqrOutlier.html","id":null,"dir":"Reference","previous_headings":"","what":"find records mor than 1.5 times the interquartile range beyond the upper quartile — .iqrOutlier","title":"find records mor than 1.5 times the interquartile range beyond the upper quartile — .iqrOutlier","text":"find records mor 1.5 times interquartile range beyond upper quartile","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-iqrOutlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find records mor than 1.5 times the interquartile range beyond the upper quartile — .iqrOutlier","text":"","code":".iqrOutlier(dists)"},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-iqrOutlier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find records mor than 1.5 times the interquartile range beyond the upper quartile — .iqrOutlier","text":"dists numeric vector","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-presPercentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Omit Outlying Points Based on Percentile Distance from Centroid — .presPercentile","title":"Omit Outlying Points Based on Percentile Distance from Centroid — .presPercentile","text":"function removes outliers spatial data set based distance point centroid. Points farther specified percentile considered outliers excluded.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-presPercentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Omit Outlying Points Based on Percentile Distance from Centroid — .presPercentile","text":"","code":".presPercentile(xy, percent = NULL)"},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-presPercentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Omit Outlying Points Based on Percentile Distance from Centroid — .presPercentile","text":"xy `sf` object containing spatial points. percent numeric value 0 100 indicating percentile threshold outlier removal. NULL, outliers removed. Default NULL.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-presPercentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Omit Outlying Points Based on Percentile Distance from Centroid — .presPercentile","text":"list two elements: `xy`, cleaned `sf` object without   outliers, `out_quantile`, `sf` object containing excluded outliers.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-vgrep.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized version of grep — .vgrep","title":"Vectorized version of grep — .vgrep","text":"vectorized version grep","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-vgrep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized version of grep — .vgrep","text":"","code":".vgrep(pattern, x)"},{"path":"https://gepinillab.github.io/occOutliers/reference/dot-vgrep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized version of grep — .vgrep","text":"pattern character string containing regular expression (character string ‘fixed = TRUE’) matched given character vector.  Coerced ‘.character’ character string possible.  character vector length 2 supplied, first element used  warning. x character vector matches sought, object can coerced ‘.character’ character vector.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/envOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find outlying occurrence data in environmental space — envOutliers","title":"Find outlying occurrence data in environmental space — envOutliers","text":"Identifies environmental  outliers species occurrence data.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/envOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find outlying occurrence data in environmental space — envOutliers","text":"","code":"envOutliers(   pres,   pvalSet = 1e-05,   method = \"grubbs\",   distEnvMethod = \"euclidean\",   scaleData = TRUE,   checkPairs = FALSE,   kRosner = NULL )"},{"path":"https://gepinillab.github.io/occOutliers/reference/envOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find outlying occurrence data in environmental space — envOutliers","text":"pres sf object (POINTS) data.frame describing environmental data species records. pvalSet Numeric; user-specified p-value assessing significance outlier test statistics. Default 1e-5. method Character; options 'iqr', 'grubbs', 'dixon', 'rosner'. Default 'grubbs'. distEnvMethod Character; options 'euclidian', 'manhattan', 'cosine,  'mahalanobis'. Default 'euclidean'. scaleData Boolean; Scale data using base::scale(). Default TRUE. checkPairs Logical; check single pair outliers using Grubbs test. can performed sample sizes <30. single test used repeating tends throw points seem reasonable, eye. value effect unless `method = 'grubbs'`. Default FALSE. kRosner Integer 1 10. Determines number outliers suspected Rosner test. value effect unless `method = 'rosner'`. Default NULL.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/envOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find outlying occurrence data in environmental space — envOutliers","text":"Returns input sf object data.frame additional column 'out_env'   indicating whether point considered environmental outlier (TRUE) (FALSE).","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/envOutliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find outlying occurrence data in environmental space — envOutliers","text":"Cory Merow <cory.merow@gmail.com>, Gonzalo E. Pinilla-Buitrago","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/findOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Spatial and Environmental Outliers in Occurrence Data — findOutliers","title":"Detect Spatial and Environmental Outliers in Occurrence Data — findOutliers","text":"function identifies spatial environmental outliers species occurrence data. can apply different statistical methods detect geographic outliers environmental anomalies.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/findOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Spatial and Environmental Outliers in Occurrence Data — findOutliers","text":"","code":"findOutliers(   pres,   spatial = TRUE,   environmental = TRUE,   method = \"grubbs\",   distEnvMethod = \"euclidean\",   scaleData = TRUE,   pval = 1e-05,   checkPairs = FALSE,   kRosner = NULL,   verbose = TRUE )"},{"path":"https://gepinillab.github.io/occOutliers/reference/findOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Spatial and Environmental Outliers in Occurrence Data — findOutliers","text":"pres `sf` object POINT geometry representing species occurrence data. spatial Logical; `TRUE`, performs spatial outlier detection. environmental Logical; `TRUE`, performs environmental outlier detection. method Character; method detecting outliers. Options 'grubbs', 'iqr', 'dixon', 'rosner'. single method can used time. distEnvMethod Character; method calculating environmental distances. Options 'euclidian', 'manhattan', 'cosine, 'mahalanobis'. scaleData Logical; `TRUE`, scales environmental data calculating distances. pval Numeric; user-specified p-value assessing significance test statistic. checkPairs Logical; `TRUE`, checks pair outliers using Grubbs test (applicable sample sizes < 30). kRosner Integer; number outliers test Rosner test. Applicable `method = 'rosner'`. verbose Logical; `TRUE`, prints messages number d detected outliers.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/findOutliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect Spatial and Environmental Outliers in Occurrence Data — findOutliers","text":"function takes input `sf` object POINT geometry applies spatial /environmental outlier detection methods. Users can choose multiple outlier detection methods, including Grubbs, Dixon, IQR, Rosner. environmental outlier detection, function calculates distance occurrences based either Euclidian, Manhattan, Cosine, Mahalanobis distance.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/findOutliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect Spatial and Environmental Outliers in Occurrence Data — findOutliers","text":"Cory Merow <cory.merow@gmail.com>, Gonzalo E. Pinilla-Buitrago","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/plotOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot outlying occurrence data — plotOutliers","title":"Plot outlying occurrence data — plotOutliers","text":"Plots spatial /environmental outliers species  occurrence data.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/plotOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot outlying occurrence data — plotOutliers","text":"","code":"plotOutliers(   pres,   r = NULL,   shpToPlot = NULL,   legLoc = \"topleft\",   bufferDist = 0.2 )"},{"path":"https://gepinillab.github.io/occOutliers/reference/plotOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot outlying occurrence data — plotOutliers","text":"pres `sf` object POINT geometry describing locations species records. must contain columns spatial /environmental outliers. r optional `terra::SpatRaster` object, representing environmental data plot background. NULL, environmental layer plotted. shpToPlot optional `sf` object representing polygons plotted (e.g., shapefile boundaries geographic areas). shapefile cropped match plotting extent presence points. legLoc character, indicating position legend plot. Options `'bottomleft'`, `'topright'`, etc. NULL, legend. bufferDist numeric, indicating buffer distance proportion plot's largest axis (x y) expand plot extent. Default 0.5 (.e., 50 percent largest axis).","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/plotOutliers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot outlying occurrence data — plotOutliers","text":"function plots occurrence points, highlighting spatial  environmental outliers. environmental data shapefile provided,  included background context. legend dynamically  adjusted based whether spatial /environmental outliers detected.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/plotOutliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot outlying occurrence data — plotOutliers","text":"Cory Merow <cory.merow@gmail.com>, Gonzalo E. Pinilla-Buitrago","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/spatialOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Find outlying occurrence data in geographic space — spatialOutliers","title":"Find outlying occurrence data in geographic space — spatialOutliers","text":"Identifies spatial outliers species occurrence data.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/spatialOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find outlying occurrence data in geographic space — spatialOutliers","text":"","code":"spatialOutliers(   pres,   pvalSet = 1e-05,   method = \"grubbs\",   checkPairs = FALSE,   kRosner = NULL )"},{"path":"https://gepinillab.github.io/occOutliers/reference/spatialOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find outlying occurrence data in geographic space — spatialOutliers","text":"pres sf object (POINTS) describing locations species records. environmental outliers detected (implemented function), sf object also contain values environmental variables used. pvalSet Numeric; user-specified p-value assessing significance outlier test statistics. Default 1e-5. method Character; options 'iqr', 'grubbs', 'dixon', 'rosner'. Default 'grubbs'. checkPairs Logical; check single pair outliers using Grubbs test. can performed sample sizes <30. single test used repeating tends throw points seem reasonable, eye. value effect unless `method = 'grubbs'`. Default FALSE. kRosner Integer 1 10. Determines number outliers suspected Rosner test. value effect unless `method='rosner'`. Default NULL.","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/spatialOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find outlying occurrence data in geographic space — spatialOutliers","text":"Returns input sf object additional column 'out_spatial'   indicating whether point considered spatial outlier (TRUE) (FALSE).","code":""},{"path":"https://gepinillab.github.io/occOutliers/reference/spatialOutliers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find outlying occurrence data in geographic space — spatialOutliers","text":"Cory Merow <cory.merow@gmail.com>, Gonzalo E. Pinilla-Buitrago","code":""}]
